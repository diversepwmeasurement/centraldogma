env:
  LC_ALL: en_US.UTF-8
jobs:
  tag-new-version:
    if: github.repository == 'line/centraldogma'
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Validate inputs
      run: "if [[ ! \"${{ inputs.release_version }}\" =~ ^[0-9]+\\.[0-9]+\\.[0-9]+$\
        \ ]]; then\n  echo \"Error: 'release_version' should be in SemVer format.\"\
        \n  exit 1\nfi\nif [[ ! \"${{ inputs.next_version }}\" =~ ^[0-9]+\\.[0-9]+\\\
        .[0-9]+$ ]]; then\n  echo \"Error: 'next_version' should be in SemVer format.\"\
        \n  exit 1\nfi\n"
    - continue-on-error: true
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GH_ACCESS_TOKEN }}
    - continue-on-error: true
      name: Set up Git remote
      run: 'git remote set-url origin https://github.com/line/centraldogma.git

        '
      shell: bash
    - continue-on-error: true
      id: import_gpg
      name: Import GPG key
      uses: crazy-max/ghaction-import-gpg@v6
      with:
        git_commit_gpgsign: true
        git_user_signingkey: true
        gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
        passphrase: ${{ secrets.GPG_PASSWORD }}
    - continue-on-error: true
      id: setup-jdk-17
      name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        distribution: temurin
        java-version: '17'
    - continue-on-error: true
      name: Set up Gradle
      uses: gradle/gradle-build-action@v2
    - continue-on-error: true
      name: Bump up version
      run: './gradlew --no-daemon --stacktrace --max-workers=1 release \

        -PreleaseVersion=${{ inputs.release_version }} \

        -PnextVersion=${{ inputs.next_version }}

        '
      shell: bash
name: Release a new Central Dogma version
on:
  repository_dispatch:
    types: trigger-ga___tag-new-release.yml
