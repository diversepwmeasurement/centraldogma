concurrency:
  cancel-in-progress: true
  group: ci-${{ github.event.pull_request.number || github.sha }}
env:
  BUILD_JDK_VERSION: '17'
  LC_ALL: en_US.UTF-8
jobs:
  build:
    env:
      GRADLE_OPTS: -Xmx1280m
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v3
    - continue-on-error: true
      id: setup-build-jdk
      name: Set up build JDK ${{ env.BUILD_JDK_VERSION }}
      uses: actions/setup-java@v3
      with:
        distribution: temurin
        java-version: ${{ env.BUILD_JDK_VERSION }}
    - continue-on-error: true
      id: setup-test-jdk
      if: ${{ matrix.java != env.BUILD_JDK_VERSION }}
      name: Set up test JDK ${{ matrix.java }}
      uses: actions/setup-java@v3
      with:
        distribution: temurin
        java-version: ${{ matrix.java }}
    - continue-on-error: true
      name: Setup Gradle
      uses: gradle/gradle-build-action@v2
    - continue-on-error: true
      name: Build with Gradle
      run: './gradlew --no-daemon --stacktrace -Pleak -PnoLint build \

        ${{ matrix.coverage && ''-Pcoverage'' || '''' }} \

        -PflakyTests=false \

        -PbuildJdkVersion=${{ env.BUILD_JDK_VERSION }} \

        -PtestJavaVersion=${{ matrix.java }} \

        ${{ matrix.min-java && format(''-PminimumJavaVersion={0}'', matrix.min-java)
        || '''' }} \

        -Porg.gradle.java.installations.paths=${{ steps.setup-build-jdk.outputs.path
        }},${{ steps.setup-test-jdk.outputs.path }}

        '
      shell: bash
    - continue-on-error: true
      if: ${{ matrix.coverage }}
      name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
    - continue-on-error: true
      if: failure()
      name: Collecting the test reports ..
      run: 'find . ''('' \

        -name ''hs_err_*.log'' -or \

        -path ''*/build/reports/tests'' '')'' \

        -exec tar rf "reports-JVM-${{ matrix.on }}-${{ matrix.java }}${{ matrix.min-java
        && format(''-{0}'', matrix.min-java) || '''' }}.tar" {} '';''

        '
      shell: bash
    - continue-on-error: true
      if: failure()
      name: Upload Artifact
      uses: actions/upload-artifact@v2
      with:
        name: reports-JVM-${{ matrix.java }}
        path: reports-JVM-${{ matrix.java }}.tar
        retention-days: 3
    - continue-on-error: true
      if: always()
      name: Dump stuck threads
      run: jps | grep -vi "jps" | awk '{ print $1 }' | xargs -I'{}' jstack -l {} ||
        true
      shell: bash
    strategy:
      fail-fast: false
      matrix:
        include:
        - java: 8
          os: ubuntu-latest
        - java: 11
          os: ubuntu-latest
        - coverage: true
          java: 17
          os: ubuntu-latest
        - java: 17
          min-java: 11
          os: ubuntu-latest
        - java: 19
          os: ubuntu-latest
        java:
        - 17
        os:
        - ubuntu-latest
        - macos-12
        - windows-latest
    timeout-minutes: 60
  flaky-tests:
    env:
      GRADLE_OPTS: -Xmx1280m
    if: github.repository == 'line/centraldogma'
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v3
    - continue-on-error: true
      id: setup-jdk
      name: Set up JDK ${{ env.BUILD_JDK_VERSION }}
      uses: actions/setup-java@v3
      with:
        distribution: temurin
        java-version: ${{ env.BUILD_JDK_VERSION }}
    - continue-on-error: true
      name: Setup Gradle
      uses: gradle/gradle-build-action@v2
    - continue-on-error: true
      name: Run flaky tests
      run: './gradlew --no-daemon --stacktrace check -PnoLint -PflakyTests=true

        '
      shell: bash
    timeout-minutes: 60
  lint:
    env:
      GRADLE_OPTS: -Xmx1280m
    if: github.repository == 'line/centraldogma'
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v3
    - continue-on-error: true
      id: setup-jdk
      name: Set up JDK ${{ env.BUILD_JDK_VERSION }}
      uses: actions/setup-java@v3
      with:
        distribution: temurin
        java-version: ${{ env.BUILD_JDK_VERSION }}
    - continue-on-error: true
      name: Setup Gradle
      uses: gradle/gradle-build-action@v2
    - continue-on-error: true
      name: Build with Gradle
      run: './gradlew --no-daemon --stacktrace lint

        '
      shell: bash
    timeout-minutes: 60
name: CI
on:
  repository_dispatch:
    types: trigger-ga___actions_build.yml
